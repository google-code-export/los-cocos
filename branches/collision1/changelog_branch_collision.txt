branch of trunk to investigate adding collision functionality to cocos
see ongoing_collision_work.txt for goals, decisions, progress

r1097 editor proxies got their own file

r1096 set mime-type=application/octet-stream for *.lvl to not corrupt pickle, sample level recreated

r1095 protoeditor load - save - new first sketch. Working, code needs reorganization.

r1094 separate game specific settings from editor code

r1090-r1093 moved e0 to its own directory, renamed, added resources, added ActorProxy and LevelProxy in the way to add load-save 

r1089 e0_protoeditor.py : cleanup, strange bug in keyscrolling discovered, bug cause chain determined.
While upgrading e0 to support persistence, scrolling by keys broke: up and right will work seemingly ok, down and left will not respond.
Strange, because the event handling was not changed.
Morphing the code in small steps from e0 to the problematic version showed that increasing separation between sprites in initial population activated the bad behavior
Causality chain was discovered to be:  
    . more separation implies less visible actors
    . which renders faster
    . intel chipset don't honors pyglet vsync=True
    . produces small dt
    . ScrollerManager intifies focus at enter and exit
    . thus the small moves required by update_autoscroll are lost

r1088 added collisions to b0 (b1_crash_and_burn_cocosnode.py)

r1087 cleanup e0_protoeditor.py

r1086 added CShape.copy  - refined example d3 to e0_protoeditor.py, an editor helper that handles scroll / zoom / selection. See detailed description in protoeditor_spec.txt

r1084-1085 any_near(obj, near_distance) to not see obj

r1083 utest remove_tricky and any_near

r1082 basic tests that any CollisionManager must pass using AARectShape

r1081 added .any_near to collman API - added balldrive toy game

r1079 added .removed_tricky - API collision model deemed complete

r1078 minor change to test d2

r1077 added functionality related to mouse selection

r1073-r1075
Added AARectShape, modified benchmark code to parametrize over cshapes
Explored implementation for RectShape in collision_tests\interactive_test_RectShape_overlaps.py
Decided RectShape not worthwhile
Updated informative text files for collision dev 

r1072 Initial code checkin.
Look ongoing_collision_work.txt for discussion about the how and why and the
decisions taken.
Look at end of the same file for description of Milestone 1 and completion
status.

r1071 created trunk's branch https://los-cocos.googlecode.com/svn/branches/collision1

